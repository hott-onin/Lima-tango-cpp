/*----- PROTECTED REGION ID(SpectrumOneCCD.h) ENABLED START -----*/
//=============================================================================
//
// file :        SpectrumOneCCD.h
//
// description : Include file for the SpectrumOneCCD class
//
// project :     
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#ifndef SpectrumOneCCD_H
#define SpectrumOneCCD_H

#include <tango.h>

#include <PogoHelper.h>

#include <yat4tango/InnerAppender.h>
#include <yat4tango/PropertyHelper.h>

#include "Factory.h"

#include <lima/CtControl.h>

#include <SpectrumOneInterface.h>


/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD.h

/**
 *  SpectrumOneCCD class description:
 *    
 */

namespace SpectrumOneCCD_ns
{
/*----- PROTECTED REGION ID(SpectrumOneCCD::Additional Class Declarations) ENABLED START -----*/

//	Additional Class Declarations

/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::Additional Class Declarations

class SpectrumOneCCD : public TANGO_BASE_CLASS
{

/*----- PROTECTED REGION ID(SpectrumOneCCD::Data Members) ENABLED START -----*/

//	Add your own data members
private:

    bool                    m_is_device_initialized;
    std::stringstream       m_status_message;

    lima::SpectrumOne::Interface*   m_hw;
    lima::SpectrumOne::Camera*      m_camera;
    lima::CtControl*        m_ct;


/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::Data Members

//	Device property data members
public:
	//	GpibAddress:	Gpib Address (from 0 to 30)
	Tango::DevULong	gpibAddress;
	//	Port:	IP port
	Tango::DevULong	port;
	//	Host:	Name or IP adress
	string	host;
	//	ReadTimeout:	Read Timeout in millisecond, from 1 to 4000
	Tango::DevULong	readTimeout;
	//	TablesPath:	Path of the tables to be loaded in the CCD for its initialization
	string	tablesPath;


//	Constructors and destructors
public:
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	SpectrumOneCCD(Tango::DeviceClass *cl,string &s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	SpectrumOneCCD(Tango::DeviceClass *cl,const char *s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device name
	 *	@param d	Device description.
	 */
	SpectrumOneCCD(Tango::DeviceClass *cl,const char *s,const char *d);
	/**
	 * The device object destructor.
	 */
	~SpectrumOneCCD() {delete_device();};


//	Miscellaneous methods
public:
	/*
	 *	will be called at device destruction or at init command.
	 */
	void delete_device();
	/*
	 *	Initialize the device
	 */
	virtual void init_device();
	/*
	 *	Read the device properties from database
	 */
	void get_device_property();
	/*
	 *	Always executed method before execution command method.
	 */
	virtual void always_executed_hook();


//	Attribute methods
public:
	//--------------------------------------------------------
	/*
	 *	Method      : SpectrumOneCCD::read_attr_hardware()
	 *	Description : Hardware acquisition for attributes.
	 */
	//--------------------------------------------------------
	virtual void read_attr_hardware(vector<long> &attr_list);


	//--------------------------------------------------------
	/**
	 *	Method      : SpectrumOneCCD::add_dynamic_attributes()
	 *	Description : Add dynamic attributes if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_attributes();




//	Command related methods
public:
	/**
	 *	Command State related method
	 *	Description: This command gets the device state (stored in its device_state data member) and returns it to the caller.
	 *
	 *	@returns Device state
	 */
	virtual Tango::DevState dev_state();
	/**
	 *	Command Status related method
	 *	Description: This command gets the device status (stored in its device_status data member) and returns it to the caller.
	 *
	 *	@returns Device status
	 */
	virtual Tango::ConstDevString dev_status();
	/**
	 *	Command Write related method
	 *	Description: 
	 *
	 *	@param argin 
	 */
	virtual void write(Tango::DevString argin);
	virtual bool is_Write_allowed(const CORBA::Any &any);
	/**
	 *	Command Read related method
	 *	Description: 
	 *
	 *	@returns 
	 */
	virtual Tango::DevString read();
	virtual bool is_Read_allowed(const CORBA::Any &any);
	/**
	 *	Command Reboot related method
	 *	Description: 
	 *
	 */
	virtual void reboot();
	virtual bool is_Reboot_allowed(const CORBA::Any &any);
	/**
	 *	Command WhereAmI related method
	 *	Description: 
	 *
	 *	@returns 
	 */
	virtual Tango::DevString where_am_i();
	virtual bool is_WhereAmI_allowed(const CORBA::Any &any);


	//--------------------------------------------------------
	/**
	 *	Method      : SpectrumOneCCD::add_dynamic_commands()
	 *	Description : Add dynamic commands if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_commands();

/*----- PROTECTED REGION ID(SpectrumOneCCD::Additional Method prototypes) ENABLED START -----*/

//	Additional Method prototypes

/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::Additional Method prototypes
};

/*----- PROTECTED REGION ID(SpectrumOneCCD::Additional Classes Definitions) ENABLED START -----*/

//	Additional Classes Definitions

/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::Additional Classes Definitions

}	//	End of namespace

#endif   //	SpectrumOneCCD_H
